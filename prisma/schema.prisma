// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(uuid())
  name      String
  email     String    @unique
  password  String
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt

  wallet               Wallet?
  sentTransactions     Transaction[] @relation("SentTransactions")
  receivedTransactions Transaction[] @relation("ReceivedTransactions")

  @@map("users")
}

model Wallet {
  id        String    @id @default(uuid())
  userId    String    @unique
  balance   Decimal   @default(0.00) @db.Decimal(10, 2)
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt

  user User @relation(fields: [userId], references: [id])

  @@map("wallets")
}

model Transaction {
  id         String    @id @default(uuid())
  senderId   String
  receiverId String
  amount     Decimal   @db.Decimal(10, 2)
  status     String    @default("pending") // pending, completed, reversed
  createdAt  DateTime  @default(now())
  updatedAt  DateTime? @updatedAt

  sender   User                 @relation("SentTransactions", fields: [senderId], references: [id])
  receiver User                 @relation("ReceivedTransactions", fields: [receiverId], references: [id])
  reversal TransactionReversal?

  @@map("transactions")
}

model TransactionReversal {
  id            String   @id @default(uuid())
  transactionId String   @unique
  reason        String
  createdAt     DateTime @default(now())

  transaction Transaction @relation(fields: [transactionId], references: [id])

  @@map("transaction_reversals")
}
